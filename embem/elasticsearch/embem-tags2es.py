#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""Script to put embodied emotions entity categories in elasticsearch.

Usage: python embem-tags2es.py

Requires annotation_statistics.json generated by annotation_statistics.py.
"""
import codecs
from elasticsearch import Elasticsearch
import json
import argparse


if __name__ == '__main__':
    # Load embem tags dict
    parser = argparse.ArgumentParser()
    parser.add_argument('file', help='json file containing annotation '
                        'statistics (<embem_data_dir>/dict/annotation_'
                        'statistics.json)')
    args = parser.parse_args()

    with codecs.open(args.file, 'rb', 'utf8') as f:
        tags = json.load(f, 'utf-8')

    # TODO: ES host + port as script arguments
    es = Elasticsearch()

    # TODO: index name as script argument
    index_name = 'embem'
    type_name = 'entitycategory'

    mapping = {
        'entitycategory': {
            '_id': {
                'path': 'name'
            },
            'properties': {
                'name': {
                    'type': 'string',
                    'index': 'not_analyzed'
                },
                'es_name': {
                    'type': 'string',
                    'index': 'not_analyzed'
                },
                'words': {
                    'type': 'string',
                    'index': 'not_analyzed'
                },
            }
        }
    }

    if not es.indices.exists(type_name):
        es.indices.put_mapping(index=index_name,
                               doc_type=type_name,
                               body=mapping)

    for cat, words in tags.iteritems():
        parts = cat.split(':')
        print parts[1]
        doc = {
            'name': parts[1],
            'es_name': 'EmbodiedEmotions-entities.data.{}'.format(parts[1]),
            'words': words.keys()
        }
        es.index(index=index_name, doc_type=type_name, body=doc)
